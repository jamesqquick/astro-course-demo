---
import {getCollection, getEntryBySlug} from "astro:content"
import {Image} from "astro:assets"

import Layout from "../../layouts/Layout.astro"
import PostList from "../../components/PostList.astro"
import CategoryList from "../../components/CategoryList.astro"
import Share from "../../components/Share.astro"
import {XataClient} from "../../xata"
import {getThumbnail} from "../../cloudinary"
import TableOfContents from "../../components/TableOfContents.astro"
import CommentList from "../../components/CommentList.astro"
import CommentForm from "../../components/CommentForm.astro"
import PostMeta from "../../components/PostMeta.astro"
import Main from "../../components/Main.astro"
import H1 from "../../components/H1.astro"
import EmojiReactions from "../../components/EmojiReactions.svelte"
import {getReactionDetailsByPost} from "../../utils/Emojis"
const xata = new XataClient({apiKey: import.meta.env.XATA_API_KEY})

const user = Astro.cookies.get("userId")

const {slug} = Astro.params
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData()

    const post = data.get("post") as string
    const comment = data.get("comment") as string

    if (!user?.value) {
        return Astro.redirect(`/login?redirect=/blog/${slug}#comments`)
    }

    await xata.db.comments.create({
        post,
        text: comment,
        date: new Date(),
        user: user.value,
    })
    return Astro.redirect(`/blog/${slug}#comments`)
}

const post = await getEntryBySlug("posts", slug as string)

if (!post) {
    return Astro.redirect("/404")
}

const author = await getEntryBySlug("authors", post.data.author)

if (!author) {
    return Astro.redirect("/404")
}

const posts = await getCollection("posts")
const remainingPosts = posts.filter(p => p.slug !== post.slug)
const relatedPosts = remainingPosts.filter(p =>
    p.data.categories.some(category => post.data.categories.includes(category)),
)

const comments = await xata.db.comments
    .select(["id", "text", "date", "user.name"])
    .filter({post: post.slug})
    .sort("date", "desc")
    .getMany()

const reactionDetails = await getReactionDetailsByPost(post.slug, user?.value)
const {Content, headings} = await post.render()
---

<Layout title={post.data.title} image={getThumbnail(post.data.title)}>
    <Main>
        <div class="text-zinc-500 text-2xl mb-16">
            ‚Üê <a href="/blog" class="underline">Back to all blogs</a>
        </div>

        <div class="mb-4">
            <CategoryList categories={post.data.categories} />
        </div>

        <H1 text={post.data.title} />

        <PostMeta post={post} />

        <Image
            src={post.data.image}
            alt={post.data.title}
            width={1024}
            height={1024 / 1.5}
            format="webp"
            class="rounded-2xl shadow-xl mb-28 aspect-thumbnail object-cover"
        />
        <div class="mb-10">
            <TableOfContents headings={headings} />
        </div>
        <div class="relative mb-10">
            <Share post={post} />

            <div class="prose prose-2xl overflow-visible relative">
                <Content />
            </div>
        </div>
        <EmojiReactions client:load post={post.slug} {reactionDetails} />
    </Main>

    <div
        class="bg-teal-100/30 py-14 px-24 relative border-b border-teal-900 mt-20"
    >
        <div class="max-w-7xl mx-auto">
            <div id="comments" class="">
                <span class="font-bold text-teal-900 text-4xl mr-12"
                    >Comments</span
                >

                <span
                    class="border border-teal-900 text-teal-900 rounded-full px-4 py-2 font-bold text-xl"
                >
                    {comments.length}
                </span>
            </div>
            <div class="mb-14">
                <CommentForm />
            </div>
            <CommentList comments={comments} />
        </div>
    </div>

    <div class="px-24 py-20 max-w-7xl mx-auto">
        <p class="font-bold text-teal-900 text-4xl mb-16">Related posts</p>
        <PostList posts={relatedPosts} />
    </div>
</Layout>
